const jwt = require('jsonwebtoken');
require('dotenv').config();

const authenticateToken = (req, res, next) => {
    const SECRET_KEY = process.env.JWT_SECRET;
    if (!SECRET_KEY) {
        console.error('JWT_SECRET is not defined in environment variables');
        return res.status(500).json({ message: 'Server configuration error: JWT_SECRET is missing' });
    }

    const authHeader = req.headers['authorization'];
    if (!authHeader || !authHeader.startsWith('Bearer ')) {
        return res.status(401).json({ message: 'Invalid or missing Authorization header' });
    }

    const token = authHeader.split(' ')[1];
    if (!token) {
        return res.status(401).json({ message: 'Token missing' });
    }

    try {
        // Only accept HS256 tokens
        jwt.verify(token, SECRET_KEY, { algorithms: ['HS256'] }, (err, decoded) => {
            if (err) {
                if (err.name === 'JsonWebTokenError' && err.message.includes('invalid algorithm')) {
                    return res.status(403).json({
                        message: 'Invalid token algorithm. Only HS256 tokens are accepted.',
                        hint: 'Please use tokens generated by this server\'s /api/users endpoint'
                    });
                }

                console.error('Token verification error:', err.name, err.message);
                return res.status(403).json({ message: 'Invalid token', details: err.message });
            }

            req.userId = decoded.id;
            req.user = decoded;
            next();
        });

    } catch (err) {
        console.error('Error processing token:', err.message);
        return res.status(400).json({ message: 'Malformed token', details: err.message });
    }
};

module.exports = authenticateToken;